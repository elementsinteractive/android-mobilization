name: Build

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Generate cache key
        run: ./checksum.sh checksum.txt

      - uses: actions/cache@v1
        continue-on-error: true # continue if the cache restore/upload fails
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-gradle-${{ hashFiles('checksum.txt') }}

      - name: Build and check
        run: ./gradlew spotlessCheck detektCheck assembleDebug --stacktrace

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest

      - name: Run code coverage
        run: ./gradlew jacocoTestReport mergeJacocoReports jacocoTestReportMerged

      - name: Upload code coverage to codecov
        run: bash <(curl -s https://codecov.io/bash)
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload build reports
        uses: actions/upload-artifact@v1
        with:
          name: build-reports
          path: build/reports

      - name: Copy test results
        if: always()
        run: |
          mkdir -p junit
          find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} junit/ \;

      - name: Upload test results
        uses: actions/upload-artifact@v1
        with:
          name: junit-results
          path: junit
